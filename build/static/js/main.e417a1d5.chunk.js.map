{"version":3,"sources":["TextForm.js","BlueDarkMode.js","GreyDarkMode.js","NavBar.js","About.js","Alert.js","App.js","index.js"],"names":["TextForm","props","useState","text","setText","className","style","color","mode","heading","onChange","event","target","value","backgroundColor","onClick","rows","UpperText","toUpperCase","showAlert","lowerText","toLowerCase","ne","ch","map","element","charAt","slice","top","split","toString","ne2","replaceAll","length","BlueDarkMode","class","type","role","id","htmlfor","GreyDarkMode","NavBar","to","title","About","toggleMode","toggleMode2","defaultProps","border","Mystyle","setMyStyle","btnText","setBtnText","Alert","alert","word","lower","capatilize","msg","App","setMode","setAlert","messge","setTimeout","document","body","background","exact","path","ReactDOM","createRoot","getElementById","render"],"mappings":"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","file":"static/js/main.e417a1d5.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nfunction TextForm(props){\r\n    const [text,setText]=useState(\"\")\r\n    function changeText(){\r\n        let UpperText=text.toUpperCase();\r\n        setText(UpperText)\r\n        props.showAlert(\"Changed to Upper Case\",\"success\")\r\n       \r\n    }\r\n    function changeToLower(){\r\n        let lowerText=text.toLowerCase();\r\n        setText(lowerText);\r\n        props.showAlert(\"Changed to Lower Case\",\"success\")\r\n    }\r\n    function handleOnChnage(event){\r\n        setText(\"\")\r\n        setText(event.target.value)\r\n        \r\n    }\r\n\r\n    function handleOnCapital(event){\r\n       let ch=text.split(\" \")\r\n       let chn;\r\n    function top(ch){\r\n        return ch.map(element=>{\r\n            return  element.charAt(0).toUpperCase()+element.slice(1)\r\n           })\r\n    }\r\n    let ne=top(ch).toString()\r\n    let ne2=ne.replaceAll(\",\",\" \")\r\n    setText(ne2)\r\n    props.showAlert(\"Changed First letter to capital\",\"success\")\r\n    }\r\n    \r\n\r\n    function check(){\r\n       setText(\"\")\r\n    }\r\n   //split return array \r\n\r\n    return(\r\n        <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}} >\r\n        <h1>{props.heading}</h1>\r\n        <textarea onChange={handleOnChnage} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} onClick={check} value={text} heading=\"Enter The text Below\" className=\"form-control\"  rows=\"8\"></textarea>\r\n        <button onClick={changeText} className=\"btn btn-primary mx-2 my-3\">Convert TO Uppercase</button>\r\n        <button onClick={changeToLower} className=\"btn btn-primary mx-2\">Convert TO Lowercase</button>\r\n        <button onClick={handleOnCapital} className=\"btn btn-primary mx-2\">Capatilized first letter</button>\r\n        </div>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}} >\r\n            <h1>your Text Summary</h1>\r\n            <p>{text.split(\" \").length} word, {text.length} characters</p>\r\n            <p>{0.008*text.split(\" \").length} minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter somethig to preview \"}</p>\r\n        </div>\r\n\r\n</>\r\n    )\r\n}\r\n\r\nexport default TextForm","import react  from \"react\";\r\nfunction  BlueDarkMode(props){\r\n    return(\r\n        <div>\r\n             <div className={`form-check form-switch text-${props.mode===\"light\"?'blue':'light'}`}>\r\n                <input onClick={props.onClick} class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label  class=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">BlueDark Mode</label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BlueDarkMode","import react  from \"react\";\r\nfunction  GreyDarkMode(props){\r\n    return(\r\n        <div>\r\n             <div className={`form-check form-switch text-${props.mode===\"light\"?'dark':'light'}`}>\r\n                <input onClick={props.onClick} class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label  class=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">GrayDark Mode</label>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GreyDarkMode","import React,{useState} from 'react';\r\nimport propTypes from 'prop-types';\r\nimport BlueDarkMode  from './BlueDarkMode';\r\nimport GreyDarkMode from './GreyDarkMode';\r\nimport { Link } from 'react-router-dom';\r\nfunction NavBar(props){\r\n    return(\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">{props.About}</Link>\r\n                </li>            \r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n                <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form>      */}\r\n            {/* <div className={`form-check form-switch text-${props.mode===\"light\"?'dark':'light'}`}>\r\n                <input onClick={props. toggleMode} class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                <label  class=\"form-check-label\" htmlfor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n            </div> */}\r\n            <GreyDarkMode onClick={props.toggleMode} mode={props.mode}/>\r\n            <BlueDarkMode onClick={props.toggleMode2} mode={props.mode}/>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\nNavBar.propTypes={\r\n    title:propTypes.string.isRequired,\r\n    About:propTypes.string.isRequired\r\n}\r\n\r\nNavBar.defaultProps={\r\n    title:\"Set Titile\",\r\n    About:\"Set About\"\r\n}\r\n\r\nexport default NavBar","import React,{useState} from 'react'\r\n\r\nfunction About(){\r\n  const[Mystyle,setMyStyle]=useState(\r\n    {\r\n      backgroundColor:'black',\r\n      color:'white',\r\n     // borderRadius:'3px',\r\n     border:'2px solid white'\r\n  }\r\n  )\r\n  const[btnText,setBtnText]=useState(\"Enable dark mode\")\r\n  \r\n\r\n    function changeMode(){\r\n      if(Mystyle.color==='white'){\r\n        setMyStyle({\r\n          backgroundColor:'white',\r\n          color:'black',\r\n          border:'2px solid black'\r\n      })\r\n      setBtnText(\"Enable dark mood\")\r\n      }\r\n      else{\r\n        setMyStyle({\r\n          backgroundColor:'black',\r\n          color:'white',\r\n          border:'2px solid white'\r\n      })\r\n      setBtnText(\"Enable white mood\")\r\n      }\r\n        \r\n    }\r\n    return(\r\n        <div className=\"container my-3\" style={Mystyle}>\r\n        <h1>About</h1>\r\n            <div class=\"accordion\" id=\"accordionExample\">\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingOne\">\r\n      <button class=\"accordion-button\"  style={Mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingTwo\">\r\n      <button class=\"accordion-button collapsed\"  style={Mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"accordion-item\">\r\n    <h2 class=\"accordion-header\" id=\"headingThree\">\r\n      <button class=\"accordion-button collapsed\"  style={Mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n      <div class=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div className=\"container my-3\">\r\n<button onClick={changeMode} type=\"button\" className=\"btn btn-primary btn-lg \">{btnText}</button>\r\n</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\n\r\nfunction Alert(props){\r\n    let capatilize=(word)=>{\r\n        let lower=word.toLowerCase()\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1)\r\n    }\r\n    return(\r\n        props.alert &&\r\n        <div>\r\n        <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capatilize(props.alert.type)}</strong>: {props.alert.msg}\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import React,{useState}  from \"react\";\nimport TextForm  from \"./TextForm\";\nimport NavBar  from \"./NavBar\";\nimport About  from \"./About\";\nimport Alert from \"./Alert\";\n// import { useState } from \"react/cjs/react.production.min\";\nimport {\n  BrowserRouter ,\n Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  let [mode,setMode]=useState(\"light\");\n  let [alert,setAlert]= useState(null);\n  let showAlert=(messge,type)=>{\n    setAlert({\n      msg:messge,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null)\n    },1000)\n  }\n  let toggleMode2=()=>{\n    if(mode===\"light\"  ){\n      setMode(\"blue\")\n      document.body.style.background=\"lightblue\";\n      showAlert(\"BlueDark mode has been Enabled\",\"success\")\n      document.title=\"TextUtils-blueMode\"\n    }\n    else{\n      setMode(\"light\")\n      document.body.style.background=\"white\";\n      showAlert(\"Light mode has been Enabled\",\"success\")\n    }\n  }\n let  toggleMode=()=>{\n    if(mode===\"light\"){\n      setMode(\"dark\")\n      document.body.style.background=\"grey\";\n      showAlert(\"GrayDark mode has been Enabled\",\"success\")\n      document.title=\"TextUtils-darkMode\"\n    }\n    else{\n      setMode(\"light\")\n      document.body.style.background=\"white\";\n      showAlert(\"Light mode has been Enabled\",\"success\")\n    }\n  }\n  return (\n    < BrowserRouter>\n    <NavBar title=\"TextUtils\" mode={mode}  toggleMode={toggleMode}  toggleMode2={toggleMode2} />\n    <Alert alert={alert}/>\n    <div className=\"container\">\n    <Routes>\n        <Route exact path=\"/about\" element={ <About />}/>\n          <Route exact path=\"/\" element={  <TextForm heading=\"Enter the Text Below\" mode={mode} showAlert={showAlert}/>} />\n      </Routes> \n    </div>\n    </ BrowserRouter>\n  );\n}\n \nexport default App;\n//react router help us to change the desired component without changing other component which need not to be change ","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}